{"ast":null,"code":"var _jsxFileName = \"E:\\\\Node-React\\\\Frontend-Notes-App\\\\src\\\\components\\\\ResetPassword.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate, useSearchParams } from 'react-router-dom';\nimport axios from 'axios';\nimport './Login.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_BASE_URL = 'http://localhost:5000'; // Change this to your actual base URL\n\nfunction ResetPassword() {\n  _s();\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [resetSuccess, setResetSuccess] = useState(false); // Add this line\n  const navigate = useNavigate();\n  const [state] = useSearchParams();\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const response = await axios.post(`${API_BASE_URL}/auth/reset-password?id=${state.get(\"id\")}&token=${state.get(\"token\")}`, {\n        password\n      });\n      if (response.data.message === 'Password reset successfully') {\n        setResetSuccess(true);\n\n        // Automatically navigate to the login page after 5 seconds (adjust as needed)\n        setTimeout(() => {\n          setResetSuccess(false);\n          navigate('/login', {\n            replace: true\n          });\n        }, 5000);\n      } else {\n        // Handle other cases where the reset might not have been successful\n        // console.log('Password reset failed');\n      }\n    } catch (error) {\n      // Handle error\n      // console.log('Password reset failed:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"d-flex justify-content-center align-items-center bg-secondary vh-100\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white p-3 rounded w-25\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Reset Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), resetSuccess && /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: 'black'\n        },\n        children: \"Password reset successfully. Redirecting to login...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"password\",\n            children: /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"New Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            placeholder: \"Enter New Password\",\n            name: \"password\",\n            className: \"form-control rounded-0\",\n            value: password,\n            onChange: e => setPassword(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"confirmPassword\",\n            children: /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Confirm New Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            placeholder: \"Confirm New Password\",\n            name: \"confirmPassword\",\n            className: \"form-control rounded-0\",\n            value: confirmPassword,\n            onChange: e => setConfirmPassword(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn btn-success w-100 rounded-0\",\n          children: \"Reset Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n_s(ResetPassword, \"5Bup3wup7PQRMl0gbgrSyNn3GxA=\", false, function () {\n  return [useNavigate, useSearchParams];\n});\n_c = ResetPassword;\nexport default ResetPassword;\nvar _c;\n$RefreshReg$(_c, \"ResetPassword\");","map":{"version":3,"names":["React","useState","useNavigate","useSearchParams","axios","jsxDEV","_jsxDEV","API_BASE_URL","ResetPassword","_s","password","setPassword","confirmPassword","setConfirmPassword","resetSuccess","setResetSuccess","navigate","state","handleSubmit","e","preventDefault","response","post","get","data","message","setTimeout","replace","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","color","onSubmit","htmlFor","type","placeholder","name","value","onChange","target","_c","$RefreshReg$"],"sources":["E:/Node-React/Frontend-Notes-App/src/components/ResetPassword.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate, useSearchParams } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport './Login.css';\r\n\r\nconst API_BASE_URL = 'http://localhost:5000'; // Change this to your actual base URL\r\n\r\nfunction ResetPassword() {\r\n  const [password, setPassword] = useState('');\r\n  const [confirmPassword, setConfirmPassword] = useState('');\r\n  const [resetSuccess, setResetSuccess] = useState(false); // Add this line\r\n  const navigate = useNavigate();\r\n\r\n  const [state] = useSearchParams();\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    try {\r\n      const response = await axios.post(\r\n        `${API_BASE_URL}/auth/reset-password?id=${state.get(\"id\")}&token=${state.get(\"token\")}`,\r\n        {\r\n          password,\r\n        }\r\n      );\r\n\r\n      if (response.data.message === 'Password reset successfully') {\r\n        setResetSuccess(true);\r\n\r\n        // Automatically navigate to the login page after 5 seconds (adjust as needed)\r\n        setTimeout(() => {\r\n          setResetSuccess(false);\r\n          navigate('/login', { replace: true });\r\n        }, 5000);\r\n      } else {\r\n        // Handle other cases where the reset might not have been successful\r\n        // console.log('Password reset failed');\r\n      }\r\n    } catch (error) {\r\n      // Handle error\r\n      // console.log('Password reset failed:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"d-flex justify-content-center align-items-center bg-secondary vh-100\">\r\n      <div className=\"bg-white p-3 rounded w-25\">\r\n        <h4>Reset Password</h4>\r\n\r\n        {resetSuccess && (\r\n  <p style={{ color: 'black' }}>\r\n    Password reset successfully. Redirecting to login...\r\n  </p>\r\n)}\r\n\r\n\r\n        <form onSubmit={handleSubmit}>\r\n          <div className=\"mb-3\">\r\n            <label htmlFor=\"password\">\r\n              <strong>New Password</strong>\r\n            </label>\r\n            <input\r\n              type=\"password\"\r\n              placeholder=\"Enter New Password\"\r\n              name=\"password\"\r\n              className=\"form-control rounded-0\"\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n            />\r\n          </div>\r\n          <div className=\"mb-3\">\r\n            <label htmlFor=\"confirmPassword\">\r\n              <strong>Confirm New Password</strong>\r\n            </label>\r\n            <input\r\n              type=\"password\"\r\n              placeholder=\"Confirm New Password\"\r\n              name=\"confirmPassword\"\r\n              className=\"form-control rounded-0\"\r\n              value={confirmPassword}\r\n              onChange={(e) => setConfirmPassword(e.target.value)}\r\n            />\r\n          </div>\r\n          <button type=\"submit\" className=\"btn btn-success w-100 rounded-0\">\r\n            Reset Password\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ResetPassword;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}